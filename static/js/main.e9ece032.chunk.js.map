{"version":3,"sources":["Components/Auth/Login.js","Components/Auth/Signup.js","Components/Auth/index.js","App.js","serviceWorker.js","index.js"],"names":["Login","react_default","a","createElement","className","Form","Group","controlId","Label","Control","type","Check","label","href","Button","variant","Component","Signup","LoginSignup","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","opened","setState","Auth_Login","onClick","toggleSignup","bind","class","Auth_Signup","App","Components_Auth","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"kPAsCeA,mLAjCX,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACdH,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACFJ,EAAAC,EAAAC,cAACE,EAAA,EAAKC,MAAN,CAAYC,UAAU,kBACpBN,EAAAC,EAAAC,cAACE,EAAA,EAAKG,MAAN,iBACAP,EAAAC,EAAAC,cAACE,EAAA,EAAKI,QAAN,CAAcC,KAAK,UAGrBT,EAAAC,EAAAC,cAACE,EAAA,EAAKC,MAAN,CAAYC,UAAU,qBACpBN,EAAAC,EAAAC,cAACE,EAAA,EAAKG,MAAN,iBACAP,EAAAC,EAAAC,cAACE,EAAA,EAAKI,QAAN,CAAcC,KAAK,cAErBT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACdH,EAAAC,EAAAC,cAACE,EAAA,EAAKC,MAAN,CAAYC,UAAU,oBACpBN,EAAAC,EAAAC,cAACE,EAAA,EAAKM,MAAN,CAAYD,KAAK,WAAWE,MAAM,kBAEpCX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACdH,EAAAC,EAAAC,cAAA,KAAGU,KAAK,IAAR,qBAIFZ,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAQC,QAAQ,UAAUL,KAAK,UAA/B,oBAzBaM,aCsCLC,mLApCX,OACEhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACdH,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACFJ,EAAAC,EAAAC,cAACE,EAAA,EAAKC,MAAN,CAAYC,UAAU,kBACpBN,EAAAC,EAAAC,cAACE,EAAA,EAAKG,MAAN,iBACAP,EAAAC,EAAAC,cAACE,EAAA,EAAKI,QAAN,CAAcC,KAAK,UAGrBT,EAAAC,EAAAC,cAACE,EAAA,EAAKC,MAAN,CAAYC,UAAU,qBACpBN,EAAAC,EAAAC,cAACE,EAAA,EAAKG,MAAN,iBACAP,EAAAC,EAAAC,cAACE,EAAA,EAAKI,QAAN,CAAcC,KAAK,cAGrBT,EAAAC,EAAAC,cAACE,EAAA,EAAKC,MAAN,CAAYC,UAAU,qBACpBN,EAAAC,EAAAC,cAACE,EAAA,EAAKG,MAAN,yBACAP,EAAAC,EAAAC,cAACE,EAAA,EAAKI,QAAN,CAAcC,KAAK,cAGrBT,EAAAC,EAAAC,cAACE,EAAA,EAAKC,MAAN,CAAYC,UAAU,qBACpBN,EAAAC,EAAAC,cAACE,EAAA,EAAKG,MAAN,sBACAP,EAAAC,EAAAC,cAACE,EAAA,EAAKI,QAAN,CAAcC,KAAK,WAIrBT,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAQC,QAAQ,UAAUL,KAAK,UAA/B,sBA5BcM,aC+BNE,qBA3Bb,SAAAA,EAAYC,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IAChBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACXC,QAAQ,GAHMR,8EAOhBG,KAAKM,SAAS,CAACD,QAASL,KAAKI,MAAMC,0CAGnC,OACE3B,EAAAC,EAAAC,cAAA,OAAKC,UAAWmB,KAAKI,MAAMC,OAAS,oBAAsB,WAC1D3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAAC2B,EAAD,MACA7B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAU2B,QAASR,KAAKS,aAAaC,KAAKV,QACzDtB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,WAAW2B,QAASR,KAAKS,aAAaC,KAAKV,OAAOtB,EAAAC,EAAAC,cAAA,KAAG+B,MAAM,iBAC3EjC,EAAAC,EAAAC,cAACgC,EAAD,iBAnBcnB,cCOXoB,mLARX,OACEnC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACkC,EAAD,cAJUrB,aCSEsB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAO3C,EAAAC,EAAAC,cAAC0C,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.e9ece032.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {Form, Button} from 'react-bootstrap'\n\nclass Login extends Component {\n  render() {\n    return (\n      <div className=\"formCon\">\n        <h2>Account Login</h2>\n        <div className=\"formBox\">\n        \t<Form>\n\t\t\t\t\t  <Form.Group controlId=\"formBasicEmail\">\n\t\t\t\t\t    <Form.Label>Username</Form.Label>\n\t\t\t\t\t    <Form.Control type=\"text\" />\n\t\t\t\t\t  </Form.Group>\n\n\t\t\t\t\t  <Form.Group controlId=\"formBasicPassword\">\n\t\t\t\t\t    <Form.Label>Password</Form.Label>\n\t\t\t\t\t    <Form.Control type=\"password\" />\n\t\t\t\t\t  </Form.Group>\n\t\t\t\t\t  <div className=\"innerBox\">\n\t\t\t\t\t\t  <Form.Group controlId=\"formBasicChecbox\">\n\t\t\t\t\t\t    <Form.Check type=\"checkbox\" label=\"Check me out\" />\n\t\t\t\t\t\t  </Form.Group>\n\t\t\t\t\t\t  <div className=\"forgotLink\">\n\t\t\t\t\t\t  \t<a href=\"\">Forgot Password</a>\n\t\t\t\t\t\t  </div>\n\t\t\t\t\t  </div>\n\n\t\t\t\t\t  <Button variant=\"primary\" type=\"submit\">\n\t\t\t\t\t    Log in\n\t\t\t\t\t  </Button>\n\t\t\t\t\t</Form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from 'react';\nimport {Form, Button} from 'react-bootstrap'\n\nclass Signup extends Component {\n  render() {\n    return (\n      <div className=\"formCon\">\n        <h2>Register Login</h2>\n        <div className=\"formBox\">\n        \t<Form>\n\t\t\t\t\t  <Form.Group controlId=\"formBasicEmail\">\n\t\t\t\t\t    <Form.Label>Username</Form.Label>\n\t\t\t\t\t    <Form.Control type=\"text\" />\n\t\t\t\t\t  </Form.Group>\n\n\t\t\t\t\t  <Form.Group controlId=\"formBasicPassword\">\n\t\t\t\t\t    <Form.Label>Password</Form.Label>\n\t\t\t\t\t    <Form.Control type=\"password\" />\n\t\t\t\t\t  </Form.Group>\n\n\t\t\t\t\t  <Form.Group controlId=\"formBasicPassword\">\n\t\t\t\t\t    <Form.Label>Confirm Password</Form.Label>\n\t\t\t\t\t    <Form.Control type=\"password\" />\n\t\t\t\t\t  </Form.Group>\n\n\t\t\t\t\t  <Form.Group controlId=\"formBasicPassword\">\n\t\t\t\t\t    <Form.Label>Email Address</Form.Label>\n\t\t\t\t\t    <Form.Control type=\"email\" />\n\t\t\t\t\t  </Form.Group>\n\t\t\t\t\t  \n\n\t\t\t\t\t  <Button variant=\"primary\" type=\"submit\">\n\t\t\t\t\t    Register\n\t\t\t\t\t  </Button>\n\t\t\t\t\t</Form>\n\t\t\t\t</div>\n      </div>\n    );\n  }\n}\n\nexport default Signup;\n","import React, { Component } from 'react';\nimport Login from './Login'\nimport Signup from './Signup'\nimport './index.css';\nimport {Form, Button} from 'react-bootstrap'\n\nclass LoginSignup extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      opened: false\n    }\n  }\n  toggleSignup(){\n    this.setState({opened: !this.state.opened})\n  }\n  render() {\n    return (\n      <div className={this.state.opened ? \"authCon openedBar\" : \"authCon\"}>\n      <div className=\"outterCon\">\n        <div className=\"authBox outterBox\">\n          <Login />\n          <div className=\"signupCon\">\n            <div className=\"leftBar\" onClick={this.toggleSignup.bind(this)}></div>\n            <span className=\"closeBtn\" onClick={this.toggleSignup.bind(this)}><i class=\"fa fa-times\"></i></span>\n            <Signup />\n          </div>\n        </div>\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default LoginSignup;\n","import React, { Component } from 'react';\nimport LoginSignup from './Components/Auth'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <LoginSignup />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}